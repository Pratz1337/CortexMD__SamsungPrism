services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    container_name: postgres-cortexmd-dev
    environment:
      POSTGRES_DB: cortexmd
      POSTGRES_USER: cortexmd
      POSTGRES_PASSWORD: cortexmd123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cortexmd -d cortexmd"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5.15.0
    container_name: neo4j-cortexmd-dev
    ports:
      - "7475:7474"    # Neo4j Browser
      - "7688:7687"    # Neo4j Bolt
    environment:
      NEO4J_AUTH: neo4j/12345678
      NEO4J_PLUGINS: '["graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: 'gds.*,apoc.*'
      NEO4J_dbms_security_procedures_allowlist: 'gds.*,apoc.*'
    volumes:
      - neo4j-data-dev:/data
      - neo4j-logs-dev:/logs
      - neo4j-plugins-dev:/plugins
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "12345678", "MATCH () RETURN count(*) limit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis-cortex-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-data-dev:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Backend Service (Development Mode)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: cortexmd-backend-dev
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://cortexmd:cortexmd123@postgres:5432/cortexmd
      - REDIS_URL=redis://redis:6379/0
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=12345678
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
      - ./backend/ssl_certs:/app/ssl_certs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    restart: unless-stopped

  # Frontend Service (Development Mode)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: cortexmd-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      - ./frontend/ssl_certs:/app/ssl_certs
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres-data-dev:
  neo4j-data-dev:
  neo4j-logs-dev:
  neo4j-plugins-dev:
  redis-data-dev: